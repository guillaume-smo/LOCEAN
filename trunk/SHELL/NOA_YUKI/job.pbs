#PBS -N RUN
#PBS -S /usr/local/bin/bash
#PBS -T mpisx
#PBS -q vector
#PBS -b 1
#PBS -j o
#PBS -m abe
#PBS -M guillaume.samson@meteo.fr
#PBS -v NPT=12
#PBS -l cpunum_job=${NPT}
#PBS -l cputim_job=50:00:00
#PBS -l elapstim_req=03:00:00
#PBS -l memsz_job=180gb


# GLOBAL PARAMETERS:
#-----------------------------------------------------------
EXP_NAME=ECUGLO2V3	#   nom experience
INI_DATE=2008-02-13     #  date START
INI_HOUR=18             # heure START (00 / 06 / 12 / 18)
RST_DATE=2008-02-13     #  date RESTART
FIN_DATE=2008-02-17     #  date END (00H)
RUN_TIME=24             # duree du run en heures (1h, 24h, 48h, ...)
RUN_MODE=CPL		# CPL / NEMO / AROME
CPL_FREQ=15             # frequence de couplage en minutes (mode CPL only)
RST_AUTO=1              # restart automatique ( rst_auto x run_time )
#-----------------------------------------------------------

# AROME PARAMETERS:
#-----------------------------------------------------------
CFG_AROM=IVAN2km	# configuration AROME ( IVAN4km / IVAN2km / GIOV2km / FELL2km / BING2km )
NAM_AROM=namel_previ_dyn_off_${CFG_AROM}_${RUN_MODE}_PC
NAM_SURF=EXSEG1.nam_ECUME
BDY_FREQ=6              # frequence forcage lateral atmospherique en heures
TSTEP=60                # pas de temps en secondes (dtmax(4km)=90s, dtmax(2km)=60s)
NSTOP=h${RUN_TIME}      # h1 = t60
NCONF=001
VERSION=meteo
ADVEC=sli
MODEL=aladin
AROME_BIN=MASTER_DEBUG	# MASTER_DEBUG
#-----------------------------------------------------------

# NEMO PARAMETERS:
#-----------------------------------------------------------
CFG_NEMO=IVAN12         # configuration NEMO (IVAN12)
NAM_NEMO=namelist-${CFG_NEMO}_${RUN_MODE}
BDY_FORC=GLORYS2V3      # conditions initiales + obc : PSY3V3R1 ou GLORYS2V1
ATM_FORC=ALADIN         # forcage atmospherique (mode "NEMO") : ECMWF ou ALADIN
NEMO_TSTEP=450          # pas de temps en secondes (450s max)
# nombre de pas de temps du restart initial (768 / 960 / 1152)
INIKT=1104

#-----------------------------------------------------------

# OASIS PARAMETERS:
#-----------------------------------------------------------
CFG_OASIS=IVAN2km_IVAN12
#-----------------------------------------------------------

set -x

# GESTION DATES
#-----------------------------------------------------------
if [ $FIN_DATE = $RST_DATE ]; then exit; fi
#if [ $INI_DATE = $RST_DATE ]; then JOB_TYPE=START; else JOB_TYPE=RESTART; fi
END_DATE=$(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date="@$(($(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date "$RST_DATE" +%s)+RUN_TIME*60*60))" +"%Y-%m-%d")
RUN_SEC=$((RUN_TIME*3600))
CPL_SEC=$((CPL_FREQ*60))
BEG_DATE=$(echo $INI_DATE | sed -e s/-//g)
if [ $INI_DATE = $RST_DATE ]; then
  PRE_DATE=$BEG_DATE; else
  PRE_DATE=$(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date="@$(($(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date "$RST_DATE" +%s)-RUN_TIME*60*60))" +"%Y%m%d")
fi
NEX_DATE=$(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date="@$(($(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date "$END_DATE" +%s)+RUN_TIME*60*60))" +"%Y-%m-%d")
RST_HOUR=$((($(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date "$RST_DATE" +%s)-$(/ext/mr/spsy/spsy003/PSY2V4R4/db/exe/date_sx9 --date "$BEG_DATE" +%s))/(60*60)))
PRE_HOUR=$((RST_HOUR-RUN_TIME))
END_HOUR=$((RST_HOUR+RUN_TIME))
if [ $END_HOUR -lt $BDY_FREQ ]; then END_HOUR=$BDY_FREQ; fi

KTINI=$(( INIKT + RST_HOUR * 3600 / $NEMO_TSTEP + 1 ))
NIT_NEMO=$(( KTINI + RUN_TIME * 3600 / $NEMO_TSTEP - 1 ))
#-----------------------------------------------------------


# PATHS
#-----------------------------------------------------------
JOBID=$(echo $PBS_JOBID | cut -d: -f2 | cut -d. -f1)
FICPATH=/work/samson/TEST_CPL/FICDIR
NEMPATH=/cnrm/gc/mrgf/samson/INPUTS_NEMO/${CFG_NEMO}
AROPATH=/cnrm/gc/mrgf/samson/INPUTS_AROME/${CFG_AROM}
#OASPATH=/cnrm/gc/mrgf/samson/INPUTS_OASIS/${CFG_AROM}_${CFG_NEMO}
OASPATH=/cnrm/gc/mrgf/samson/INPUTS_OASIS/${CFG_OASIS}
TMPPATH=/work/samson/TEST_CPL/TMPDIR/JOB_$JOBID
OUTPATH=/work/samson/TEST_CPL/OUTDIR/EXP_${CFG_AROM}_${EXP_NAME}_${RUN_MODE}_${BEG_DATE}H${INI_HOUR}/$(printf %02d $((10#$RST_HOUR)))H-$(printf %02d $((10#$END_HOUR)))H
RSTPATH=/work/samson/TEST_CPL/OUTDIR/EXP_${CFG_AROM}_${EXP_NAME}_${RUN_MODE}_${BEG_DATE}H${INI_HOUR}/$(printf %02d $((10#$PRE_HOUR)))H-$(printf %02d $((10#$RST_HOUR)))H
CACPATH=/work/samson/TEST_CPL/FICDIR/CACHE
COUPATH=EXP_${CFG_AROM}_${EXP_NAME}_${RUN_MODE}_${BEG_DATE}H${INI_HOUR}/$(printf %02d $((10#$RST_HOUR)))H-$(printf %02d $((10#$END_HOUR)))H
if [ ! -d $OUTPATH ]; then mkdir -p $OUTPATH; else rm -f ${OUTPATH}/*; fi
if [ ! -d $TMPPATH ]; then mkdir -p $TMPPATH; fi
if [ $INI_DATE != $RST_DATE ] && [ -e ${RSTPATH}/job.pbs ]; then cp -f ${RSTPATH}/job.pbs ${TMPPATH}/.; fi
#-----------------------------------------------------------


# PROCS (OCEAN/COUPLER/ATMOSPHERE)
#-----------------------------------------------------------
if [ $RUN_MODE != "NEMO" ]; then
  NPO=1
  NPC=1
  if [ $RUN_MODE == "AROME"  ]; then NPA=$NPT; else NPA=$((NPT-NPO-NPC)); fi
else
  NPO=$NPT
fi
#-----------------------------------------------------------


# EXPORT BOUSIN
#-----------------------------------------------------------
export SX_BASE_F90=/SX/opt/sxf90/rev441-ia64
export SX_BASE_CROSS=/SX/opt/crosskit/r181
export SX_BASE_CPLUS=/SX/opt/sxc++/rev092_64
export SX_BASE_MPI=/SX/opt/mpisx/r181-17
export SX_BASE_LIB=/SX/usr/lib

export DR_HOOK=0
export DR_HOOK_IGNORE_SIGNALS=-1
export DR_HOOK_SILENT=1

export EC_PROFILE_HEAP=0

export F_SYSLEN=1000
export F_FMTBUF=131072
export F_RECLUNIT=BYTE
export F_PROGINF=ALL_DETAIL
export F_FTRACE=NO
export F_FILEINF=ALL_DETAIL
export F_ERRCNT=0
export F_SETBUF=8192

export MPIPROGINF=ALL_DETAIL
export MPISEPSELECT=4
export MPISUSPEND=ON
export MPIMULTITASKMIX=ON
export MPICOMMINF=ALL
export MPISUSPENDCOUNT=1

if [ $RUN_MODE == "CPL" ]; then
  export OASIS3=yes
  export OASIS3DEBUGLEVEL=1
else
  export OASIS3=no
  export OASIS3DEBUGLEVEL=0
fi

#export F_HSDIR=03,07,08,54,71,81,95
#export F_FTRACE=YES
#export MBX_SIZE=64000000
#-----------------------------------------------------------


# AUXILIARY/STATIC FILES
#-----------------------------------------------------------
cd $TMPPATH; pwd
if [ $RUN_MODE != "NEMO" ]; then

  # AROME
  for f in ${AROPATH}/*CLIM*; do ln -sf $f `basename $f`; done
  ln -sf ${AROPATH}/ecoclimapI_covers_param.bin ecoclimapI_covers_param.bin
  ln -sf ${AROPATH}/ecoclimapII_eu_covers_param.bin ecoclimapII_eu_covers_param.bin
  ln -sf ${AROPATH}/ECOZC ECOZC
  ln -sf ${AROPATH}/RADRRTM RADRRTM
  # SURFEX
  ln -sf ${AROPATH}/PGD_${CFG_AROM}.lfi PGD.lfi

  if [ $RUN_MODE == "CPL" ]; then
    # NEMO
    ln -sf ${NEMPATH}/bathymetry_meter_${CFG_NEMO}.nc bathy_meter.nc
    ln -sf ${NEMPATH}/coordinates_${CFG_NEMO}.nc coordinates.nc
    ln -sf ${NEMPATH}/runoff_${CFG_NEMO}.nc runoff.nc
    ln -sf ${NEMPATH}/xmlio_server.def xmlio_server.def
    # OASIS
    ln -sf ${OASPATH}/masks_arom_nemo_i4.nc masks.nc
    ln -sf ${OASPATH}/grids_arom_nemo_r8.nc grids.nc
    ln -sf ${OASPATH}/areas_arom_nemo_r8.nc areas.nc
    if [ -e ${OASPATH}/rmp_ocet_to_atmt_BILINEA.nc ]; then ln -sf ${OASPATH}/rmp_ocet_to_atmt_BILINEA.nc rmp_ocet_to_atmt_BILINEA.nc; fi
    if [ -e ${OASPATH}/rmp_atmt_to_ocet_BILINEA.nc ]; then ln -sf ${OASPATH}/rmp_atmt_to_ocet_BILINEA.nc rmp_atmt_to_ocet_BILINEA.nc; fi
    if [ -e ${OASPATH}/rmp_atmt_to_oceu_BILINEA.nc ]; then ln -sf ${OASPATH}/rmp_atmt_to_oceu_BILINEA.nc rmp_atmt_to_oceu_BILINEA.nc; fi
    if [ -e ${OASPATH}/rmp_atmt_to_ocev_BILINEA.nc ]; then ln -sf ${OASPATH}/rmp_atmt_to_ocev_BILINEA.nc rmp_atmt_to_ocev_BILINEA.nc; fi
    ln -sf ${OASPATH}/cf_name_table.txt cf_name_table.txt
  fi

else

  # NEMO ONLY
  ln -sf ${NEMPATH}/bathymetry_meter_${CFG_NEMO}.nc bathy_meter.nc
  ln -sf ${NEMPATH}/coordinates_${CFG_NEMO}.nc coordinates.nc
  ln -sf ${NEMPATH}/runoff_${CFG_NEMO}.nc runoff.nc
  ln -sf ${NEMPATH}/xmlio_server.def xmlio_server.def

fi
#-----------------------------------------------------------


# FORCING FILES
#-----------------------------------------------------------
if [ $RUN_MODE != "NEMO" ]; then

  # COUGAR
  for ((i=$RST_HOUR;i<=$END_HOUR;i=i+$BDY_FREQ)); do
    if [ ! -e ${AROPATH}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+$(printf %04d $((10#$i))) ]; then
      mkdir -p ${AROPATH}/${BEG_DATE}H${INI_HOUR}
      sed -e s"/COUGIPATH/${BEG_DATE}H${INI_HOUR}/"g \
          -e s"/LOCAPATH/${AROPATH}\/${BEG_DATE}H${INI_HOUR}/"g \
      job_getft.pbs > getft.pbs
      /usr/bin/nqsII/qsub ${OUTPATH}/getft.pbs
    fi
  done

  # CACHE
  for ((i=$RST_HOUR;i<=$END_HOUR;i=i+$BDY_FREQ)); do
    if [ ${AROPATH}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+$(printf %04d $((10#$i))) -nt ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+$(printf %04d $((10#$i))) ]; then
      mkdir -p ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}
      cp -f ${AROPATH}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+$(printf %04d $((10#$i))) ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+$(printf %04d $((10#$i)))
    fi
  done
  if [ ${AROPATH}/${BEG_DATE}H${INI_HOUR}/AROMOUT_SURF.ivan.0000.lfi -nt ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/AROMOUT_SURF.ivan.0000.lfi ]; then
    mkdir -p ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}
    cp -f ${AROPATH}/${BEG_DATE}H${INI_HOUR}/AROMOUT_SURF.ivan.0000.lfi ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/AROMOUT_SURF.ivan.0000.lfi
  fi

  # AROME
  j=0; for ((i=$RST_HOUR;i<=$END_HOUR;i=i+$BDY_FREQ)); do ln -sf ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+$(printf %04d $((10#$i))) ELSCFFCSTALBC$(printf %03d $((10#$j))); let j++; done

  if [ $RUN_MODE == "CPL" ]; then
    # NEMO
    ln -sf ${NEMPATH}/${BDY_FORC}/OBCDATA BDY_${CFG_NEMO}
    ln -sf ${NEMPATH}/${ATM_FORC} $ATM_FORC
  fi
else
  # NEMO ONLY
  ln -sf ${NEMPATH}/${BDY_FORC}/OBCDATA BDY_${CFG_NEMO}
  ln -sf ${NEMPATH}/${ATM_FORC} $ATM_FORC
fi
#-----------------------------------------------------------


# INITIAL/RESTART FILES
#-----------------------------------------------------------
if [ $RUN_MODE != "NEMO" ]; then

  # AROME
  if [ "$RST_DATE" == "$INI_DATE" ]; then ln -sf ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/ELSCFALAD_reunion+0000 ICMSHFCSTINIT; fi
  if [ "$RST_DATE" != "$INI_DATE" ]; then ln -sf ${RSTPATH}/ICMSHFCST+$(printf %04d $((10#$RUN_TIME))) ICMSHFCSTINIT; fi

  # SURFEX
  if [ "$RST_DATE" == "$INI_DATE" ]; then ln -sf ${CACPATH}/AROME/${CFG_AROM}/${BEG_DATE}H${INI_HOUR}/AROMOUT_SURF.ivan.0000.lfi TEST.lfi; fi
  if [ "$RST_DATE" != "$INI_DATE" ]; then ln -sf ${RSTPATH}/AROMOUT_.$(printf %04d $((10#$RUN_TIME))).lfi TEST.lfi; fi

  if [ $RUN_MODE == "CPL" ]; then
    # OASIS
    if [ "$RST_DATE" == "$INI_DATE" ]; then cp -f ${OASPATH}/sstoc_${BEG_DATE}_${BDY_FORC}.nc sstoc.nc; else cp -f ${RSTPATH}/sstoc_$(echo $RST_DATE | sed -e s/-//g).nc sstoc.nc; fi
    if [ "$RST_DATE" == "$INI_DATE" ]; then cp -f ${OASPATH}/flxat.nc flxat.nc; else cp -f ${RSTPATH}/flxat_$(echo $RST_DATE | sed -e s/-//g).nc flxat.nc; fi
    # NEMO
    if [ "$RST_DATE" == "$INI_DATE" ]; then
      ln -sf ${NEMPATH}/${BDY_FORC}/RESTART/restart_${BEG_DATE}H${INI_HOUR}.nc restart.nc
    else
      ln -sf ${RSTPATH}/${CFG_NEMO}_$(echo $RST_DATE | sed -e s/-//g)_restout.nc restart.nc
    fi
  fi
else
  # NEMO ONLY
  if [ "$RST_DATE" == "$INI_DATE" ]; then
    ln -sf ${NEMPATH}/${BDY_FORC}/RESTART/restart_${BEG_DATE}H${INI_HOUR}.nc restart.nc
  else
    ln -sf ${RSTPATH}/${CFG_NEMO}_$(echo $RST_DATE | sed -e s/-//g)_restout.nc restart.nc
  fi
fi
#-----------------------------------------------------------


# NAMELISTS
#-----------------------------------------------------------
if [ $RUN_MODE != "NEMO" ]; then

  # AROME
  sed -e s"/FRFRCS/$((BDY_FREQ*3600))/"g \
      -e s"/FRFRCM/$((BDY_FREQ*3600/TSTEP))/"g \
      -e s"/CPLFREQ/$CPL_FREQ/"g \
      -e s"/NPA/$NPA/"g \
      ${AROPATH}/${NAM_AROM} > fort.4

  # SURFEX
  ln -sf ${AROPATH}/${NAM_SURF} EXSEG1.nam

  if [ $RUN_MODE == "CPL" ]; then
    # OASIS
    sed -e s"/NPA/$NPA/"g \
        -e s"/NPO/$NPO/"g \
        -e s"/RUNSEC/$RUN_SEC/"g \
        -e s"/CPLSEC/$CPL_SEC/"g \
        -e s"/NEMOTSTEP/$NEMO_TSTEP/"g \
        -e s"/AROMTSTEP/$TSTEP/"g \
        -e s"/DATEINI/$(echo $RST_DATE | sed -e s/-//g)/"g \
        ${OASPATH}/namcouple > namcouple
    # NEMO
    if [ "$RST_DATE" == "$INI_DATE" ]; then 
#      HOTRST=.true. ; RSTART=.false.
      HOTRST=.false.; RSTART=.true. 
    else 
      HOTRST=.false.; RSTART=.true.
    fi
    sed -e s"/DATEINI/$(echo $RST_DATE | sed -e s/-//g)/"g \
        -e s"/HOTRST/$HOTRST/"g \
        -e s"/RSTART/$RSTART/"g \
        -e s"/TSTEP/$NEMO_TSTEP/"g \
        -e s"/NBIT/$NIT_NEMO/"g \
        -e s"/KTINI/$KTINI/"g \
        ${NEMPATH}/${NAM_NEMO} > namelist
    ln -sf ${NEMPATH}/iodef.xml iodef.xml
    # wrapper MPI
    sed -e s"/MODEL/$MODEL/"g -e s"/VERSION/$VERSION/"g -e s"/NCONF/$NCONF/"g -e s"/TSTEP/$TSTEP/"g -e s"/NSTOP/$NSTOP/"g -e s"/ADVEC/$ADVEC/"g \
        -e s"/NPA/$NPA/"g -e s"/NPC/$NPC/"g -e s"/NPO/$NPO/"g ${FICPATH}/mpisx.conf_NPC > mpisx.conf
  else
    # wrapper MPI
    sed -e s"/MODEL/$MODEL/"g -e s"/VERSION/$VERSION/"g -e s"/NCONF/$NCONF/"g -e s"/TSTEP/$TSTEP/"g -e s"/NSTOP/$NSTOP/"g -e s"/ADVEC/$ADVEC/"g \
        -e s"/NPA/$NPA/"g -e s"/NPC/$NPC/"g -e s"/NPO/$NPO/"g ${FICPATH}/mpisx.conf_NPA > mpisx.conf
  fi

else

  # NEMO ONLY
  if [ "$RST_DATE" == "$INI_DATE" ]; then
#   HOTRST=.true. ; RSTART=.false.
    HOTRST=.false.; RSTART=.true.
  else
    HOTRST=.false.; RSTART=.true.
  fi
  sed -e s"/DATEINI/$(echo $RST_DATE | sed -e s/-//g)/"g \
      -e s"/HOTRST/$HOTRST/"g \
      -e s"/RSTART/$RSTART/"g \
      -e s"/TSTEP/$NEMO_TSTEP/"g \
      -e s"/NBIT/$NIT_NEMO/"g \
      ${NEMPATH}/namelist-${CFG_NEMO} > namelist
  ln -sf ${NEMPATH}/iodef.xml iodef.xml
  # wrapper MPI
  sed -e s"/NPO/$NPO/"g ${FICPATH}/mpisx.conf_NPO > mpisx.conf
fi
#-----------------------------------------------------------


# BINARIES
#-----------------------------------------------------------
if [ $RUN_MODE != "NEMO" ]; then
#  if [ /cnrm/gc/mrgf/samson/pack/38t1.06_oasis/BINS/${AROME_BIN} -nt ${CACPATH}/BINS/MASTER_38t1.06_oasis ]; then
#    cp -f /cnrm/gc/mrgf/samson/pack/38t1.06_oasis/BINS/${AROME_BIN} ${CACPATH}/BINS/MASTER_38t1.06_oasis
#  fi
#  ln -s ${CACPATH}/BINS/MASTER_38t1.06_oasis atmosx
  cp -f /cnrm/gc/mrgf/samson/pack/38t1.06_oasis/BINS/${AROME_BIN} ${TMPPATH}/atmosx
  if [ $RUN_MODE == "CPL" ]; then
    if [ /cnrm/gc/mrgf/samson/OASIS/oasis3/SX9_v441_debug/bin/oasis3.MPI1.x -nt ${CACPATH}/BINS/oasis3.MPI1_SX9_v441_debug.x ]; then
      cp -f /cnrm/gc/mrgf/samson/OASIS/oasis3/SX9_v441_debug/bin/oasis3.MPI1.x ${CACPATH}/BINS/oasis3.MPI1_SX9_v441_debug.x
    fi
    ln -s ${CACPATH}/BINS/oasis3.MPI1_SX9_v441_debug.x oasis3
    if [ $BDY_FORC == "GLORYS2V1" ] || [ $BDY_FORC == "GLORYS2V3" ]; then 
      if [ /cnrm/gc/mrgf/samson/NEMO_3.4_JEROME/trunk/NEMOGCM/CONFIG/${CFG_NEMO}/BINS/nemo_${CFG_NEMO}_75L_OASIS3_v2.exe -nt ${CACPATH}/BINS/nemo_${CFG_NEMO}_75L_OASIS3.exe ]; then
        cp -f /cnrm/gc/mrgf/samson/NEMO_3.4_JEROME/trunk/NEMOGCM/CONFIG/${CFG_NEMO}/BINS/nemo_${CFG_NEMO}_75L_OASIS3_v2.exe ${CACPATH}/BINS/nemo_${CFG_NEMO}_75L_OASIS3.exe
      fi
      ln -s ${CACPATH}/BINS/nemo_${CFG_NEMO}_75L_OASIS3.exe oceanx
    fi
  fi
else
  # NEMO ONLY
  if [ /cnrm/gc/mrgf/samson/NEMO_3.4_JEROME/trunk/NEMOGCM/CONFIG/${CFG_NEMO}/BINS/nemo_${CFG_NEMO}_75L_OASIS3_v2.exe -nt ${CACPATH}/BINS/nemo_${CFG_NEMO}_75L_OASIS3.exe ]; then cp -f /cnrm/gc/mrgf/samson/NEMO_3.4_JEROME/trunk/NEMOGCM/CONFIG/${CFG_NEMO}/BINS/nemo_${CFG_NEMO}_75L_OASIS3_v2.exe ${CACPATH}/BINS/nemo_${CFG_NEMO}_75L_OASIS3.exe
  fi
  ln -s ${CACPATH}/BINS/nemo_${CFG_NEMO}_75L_OASIS3.exe oceanx
fi
#-----------------------------------------------------------
#exit


# MPIRUN
#-----------------------------------------------------------
ls -l
/cnrm/gp/mrpm/mrpm631/public/mpi/xmpirun.dev -v -xdump -f mpisx.conf
#-----------------------------------------------------------
#exit


# RESTART
#-----------------------------------------------------------
if [ -e ${TMPPATH}/ifs.stat ]; then
  if [ $( tail -1 ${TMPPATH}/ifs.stat | awk '{print $2 $3}' ) == "000000000CNT0" ]; then
    if [ $RST_AUTO != 0 ]; then
      if [ $NEX_DATE == $FIN_DATE ]; then
        sed -e s"/RST_AUTO=1/RST_AUTO=0/"g \
            -e s"/RST_DATE=$RST_DATE/RST_DATE=$END_DATE/"g \
             ${TMPPATH}/job.pbs > ${OUTPATH}/job.pbs
      else 
        sed -e s"/RST_DATE=$RST_DATE/RST_DATE=$END_DATE/"g \
             ${TMPPATH}/job.pbs > ${OUTPATH}/job.pbs
      fi
      cd $FICPATH; /usr/bin/nqsII/qsub ${OUTPATH}/job.pbs
    fi
  fi
fi
#-----------------------------------------------------------


# OUTPUTS
#-----------------------------------------------------------
cd $TMPPATH; ls -l $TMPPATH

if [ -e ${TMPPATH}/ifs.stat ]; then
  if [ $( tail -1 ${TMPPATH}/ifs.stat | awk '{print $2 $3}' ) == "000000000CNT0" ]; then
    mv -f stdall.* $OUTPATH/.
    if [ $RUN_MODE == "NEMO" ] || [ $RUN_MODE == "CPL" ]; then
      mv -f ${CFG_NEMO}_*_*_grid_?.nc $OUTPATH/.
      mv -f ${CFG_NEMO}_15min_grid_?.nc $OUTPATH/.
      mv -f ${CFG_NEMO}_*_restout.nc $OUTPATH/${CFG_NEMO}_$(echo $END_DATE | sed -e s/-//g)_restout.nc
      mv -f OK NOK solver.stat time.step warning_sal.out layout.dat ocean.output namelist $OUTPATH/.
      mv -f ????????_out.*.nc $OUTPATH/.
    fi
    if [ $RUN_MODE == "CPL" ]; then
      mv -f sstoc.nc $OUTPATH/sstoc_$(echo $END_DATE | sed -e s/-//g).nc
      mv -f flxat.nc $OUTPATH/flxat_$(echo $END_DATE | sed -e s/-//g).nc
      mv -f cplout *.prt* $OUTPATH/.
    fi
    if [ $RUN_MODE == "AROME" ] || [ $RUN_MODE == "CPL" ]; then
      mv -f ICMSHFCST+???? $OUTPATH/.
      mv -f AROMOUT_.????.lfi $OUTPATH/.
      mv -f ifs.stat $OUTPATH/.
      mv -f ECHIS NODE.* $OUTPATH/.
    fi
  fi
fi

if [ -e ${OUTPATH}/ifs.stat ]; then
  if [ $( tail -1 ${OUTPATH}/ifs.stat | awk '{print $2 $3}' ) == "000000000CNT0" ]; then
    cd $FICPATH; rm -fr $TMPPATH
  fi
fi

if [ -e ${OUTPATH}/OK ] || [ $( tail -1 ${OUTPATH}/ifs.stat | awk '{print $2 $3}' ) == "000000000CNT0" ]; then 
  sed -e "s|OUTPATH|$OUTPATH|g" -e "s|COUPATH|$COUPATH|g" ${FICPATH}/job_putft.pbs > ${OUTPATH}/job_putft.pbs
  /usr/bin/nqsII/qsub ${OUTPATH}/job_putft.pbs
fi

#if [ ! -h ${TMPPATH}/rmp_ocet_to_atmt_BILINEA.nc ]; then cp ${TMPPATH}/rmp_*_BILINEA.nc ${OASPATH}/.; fi
#-----------------------------------------------------------
